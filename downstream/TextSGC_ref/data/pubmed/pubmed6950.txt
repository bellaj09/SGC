A main research direction in the field of evolutionary machine learning is to develop a scalable classifier system to solve high-dimensional problems. Recently work has begun on autonomously reusing learned building blocks of knowledge to scale from low-dimensional problems to high-dimensional ones. An XCS-based classifier system known as XCSCFC has been shown to be scalable through the addition of expression tree-like code fragments to a limit beyond standard learning classifier systems. XCSCFC is especially beneficial if the target problem can be divided into a hierarchy of subproblems and each of them is solvable in a bottom-up fashion. However if the hierarchy of subproblems is too deep then XCSCFC becomes impractical because of the needed computational time and thus eventually hits a limit in problem size. A limitation in this technique is the lack of a cyclic representation which is inherent in finite state machines FSMs. However the evolution of FSMs is a hard task owing to the combinatorially large number of possible states connections and interaction. Usually this requires supervised learning to minimize inappropriate FSMs which for high-dimensional problems necessitates subsampling or incremental testing. To avoid these constraints this work introduces a state-machine-based encoding scheme into XCS for the first time termed XCSSMA. The proposed system has been tested on six complex Boolean problem domains: multiplexer majority-on carry even-parity count ones and digital design verification problems. The proposed approach outperforms XCSCFA an XCS that computes actions and XCSF an XCS that computes predictions in three of the six problem domains while the performance in others is similar. In addition XCSSMA evolved for the first time compact and human readable general classifiers i.e. solving any n-bit problems for the even-parity and carry problem domains demonstrating its ability to produce scalable solutions using a cyclic representation. Extending XCS with Cyclic Graphs for Scalability on Complex Boolean Problems.